#!/bin/bash

die() { echo "$0: $@" >&2; exit 1; }

help () {
	cat <<EOF
        -h display its help
        --job=job_name
        --archive-dir=path_where_your_archive
        --full-history=how_many_save_full_copy
        --incr-history=how_many_save_incr_copy
        --full-backup-day=day_of_month_for_create_full_copy_ in format "mm"
EOF
}

backup() {
	FULLLST=($(ls $DIR|grep "$JOB\.full"|sort))
	INCRLST=($(ls $DIR|grep "$JOB\.incr"|sort))
	echo "full backups need save: $FULLHIS	in store ${#FULLLST[@]}"
	echo "incr backups need save: $INCRHIS	in store ${#INCRLST[@]}"

	if [ $FULLHIS -lt ${#FULLLST[@]} ]; then
		CNT=$(expr ${#FULLLST[@]} - $FULLHIS)
		for ((i=0; i <= $CNT - 1; i++)); do
			echo "deleting ${DIR}/${FULLLST[i]}"
			rm "${DIR}/${FULLLST[i]}"
		done
	fi

	if [ $INCRHIS -lt ${#INCRLST[@]} ]; then
		CNT=$(expr ${#INCRLST[@]} - $INCRHIS)
		for ((i=0; i <= $CNT - 1; i++)); do
			echo "deleting ${DIR}/${INCRLST[i]}"
			rm "${DIR}/${INCRLST[i]}"
		done
	fi

	[ $(date +%d) = $FULLBACKUPDAY ] && rm "${DIR}/${JOB}.snap" && echo "The next backup is run as a full backup!"
}



# __main__
OPTS=`getopt -o h -l archive-dir:,job:,full-history:,incr-history:,full-backup-day: -- "$@"`
if [ $? != 0 ]
then
    exit 1
fi

eval set -- "$OPTS"

while true ; do
    case "$1" in
        -h) help; exit 0; shift;;
        --job) JOB=$2; shift 2;;
        --archive-dir) DIR=$2; shift 2;;
        --full-history) FULLHIS=$2; shift 2;;
        --incr-history) INCRHIS=$2; shift 2;;
        --full-backup-day) FULLBACKUPDAY=$2; shift 2;;
        --) shift; break;;
    esac
done
[ -d $DIR ] || die "is not dir $DIR"
backup
